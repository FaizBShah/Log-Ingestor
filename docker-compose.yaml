version: '3'
services:
  log_ingestor:
    build:
      context: .
    ports:
      - "3000:3000"
    depends_on:
      postgres:
        condition: service_healthy
      mongodb:
        condition: service_healthy
      kafka:
        condition: service_healthy
    environment:
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_DB: log_ingestor
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      KAFKA_BROKER: kafka:9092
    links:
      - postgres
      - mongodb
      - kafka

  postgres:
    image: postgres:latest
    environment:
      POSTGRES_DB: log_ingestor
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 3s
      timeout: 3s
      retries: 3
    ports:
      - "5432:5432"
    expose:
      - "5432"
  
  mongodb:
    container_name: mongodb
    image: mongo:latest
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 3s
      timeout: 3s
      retries: 3
    ports:
      - "27017:27017"
    expose:
      - "27017"

  kafka:
    image: wurstmeister/kafka:latest
    healthcheck:
      test: ["CMD", "nc", "-vz", "localhost", "9092"]
      interval: 3s
      timeout: 3s
      retries: 3
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  zookeeper:
    image: wurstmeister/zookeeper:latest
    ports:
      - "2181:2181"